// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/testdata/v1/kitchen_sink.proto

package testdatav1

import (
	date "google.golang.org/genproto/googleapis/type/date"
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Test enum for the kitchen sink
type TestEnum int32

const (
	TestEnum_TEST_ENUM_UNSPECIFIED TestEnum = 0
	TestEnum_TEST_ENUM_VALUE_ONE   TestEnum = 1
	TestEnum_TEST_ENUM_VALUE_TWO   TestEnum = 2
)

// Enum value maps for TestEnum.
var (
	TestEnum_name = map[int32]string{
		0: "TEST_ENUM_UNSPECIFIED",
		1: "TEST_ENUM_VALUE_ONE",
		2: "TEST_ENUM_VALUE_TWO",
	}
	TestEnum_value = map[string]int32{
		"TEST_ENUM_UNSPECIFIED": 0,
		"TEST_ENUM_VALUE_ONE":   1,
		"TEST_ENUM_VALUE_TWO":   2,
	}
)

func (x TestEnum) Enum() *TestEnum {
	p := new(TestEnum)
	*p = x
	return p
}

func (x TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_testdata_v1_kitchen_sink_proto_enumTypes[0].Descriptor()
}

func (TestEnum) Type() protoreflect.EnumType {
	return &file_wayplatform_testdata_v1_kitchen_sink_proto_enumTypes[0]
}

func (x TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Kitchen sink message for testing purposes.
type KitchenSink struct {
	state                             protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_DoubleValue            float64                            `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue"`
	xxx_hidden_FloatValue             float32                            `protobuf:"fixed32,2,opt,name=float_value,json=floatValue"`
	xxx_hidden_Int32Value             int32                              `protobuf:"varint,3,opt,name=int32_value,json=int32Value"`
	xxx_hidden_Int64Value             int64                              `protobuf:"varint,4,opt,name=int64_value,json=int64Value"`
	xxx_hidden_Sint32Value            int32                              `protobuf:"zigzag32,5,opt,name=sint32_value,json=sint32Value"`
	xxx_hidden_Sint64Value            int64                              `protobuf:"zigzag64,6,opt,name=sint64_value,json=sint64Value"`
	xxx_hidden_Uint32Value            uint32                             `protobuf:"varint,7,opt,name=uint32_value,json=uint32Value"`
	xxx_hidden_Uint64Value            uint64                             `protobuf:"varint,8,opt,name=uint64_value,json=uint64Value"`
	xxx_hidden_Fixed32Value           uint32                             `protobuf:"fixed32,9,opt,name=fixed32_value,json=fixed32Value"`
	xxx_hidden_Fixed64Value           uint64                             `protobuf:"fixed64,10,opt,name=fixed64_value,json=fixed64Value"`
	xxx_hidden_Sfixed32Value          int32                              `protobuf:"fixed32,11,opt,name=sfixed32_value,json=sfixed32Value"`
	xxx_hidden_Sfixed64Value          int64                              `protobuf:"fixed64,12,opt,name=sfixed64_value,json=sfixed64Value"`
	xxx_hidden_BoolValue              bool                               `protobuf:"varint,13,opt,name=bool_value,json=boolValue"`
	xxx_hidden_StringValue            *string                            `protobuf:"bytes,14,opt,name=string_value,json=stringValue"`
	xxx_hidden_BytesValue             []byte                             `protobuf:"bytes,15,opt,name=bytes_value,json=bytesValue"`
	xxx_hidden_EnumValue              TestEnum                           `protobuf:"varint,16,opt,name=enum_value,json=enumValue,enum=wayplatform.testdata.v1.TestEnum"`
	xxx_hidden_RepeatedString         []string                           `protobuf:"bytes,17,rep,name=repeated_string,json=repeatedString"`
	xxx_hidden_RepeatedInt32          []int32                            `protobuf:"varint,18,rep,packed,name=repeated_int32,json=repeatedInt32"`
	xxx_hidden_RepeatedNested         *[]*NestedMessage                  `protobuf:"bytes,19,rep,name=repeated_nested,json=repeatedNested"`
	xxx_hidden_NestedMessage          *NestedMessage                     `protobuf:"bytes,20,opt,name=nested_message,json=nestedMessage"`
	xxx_hidden_MapStringString        map[string]string                  `protobuf:"bytes,21,rep,name=map_string_string,json=mapStringString" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringInt32         map[string]int32                   `protobuf:"bytes,22,rep,name=map_string_int32,json=mapStringInt32" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_MapInt32String         map[int32]string                   `protobuf:"bytes,23,rep,name=map_int32_string,json=mapInt32String" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringNested        map[string]*NestedMessage          `protobuf:"bytes,24,rep,name=map_string_nested,json=mapStringNested" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_TimestampValue         *timestamppb.Timestamp             `protobuf:"bytes,25,opt,name=timestamp_value,json=timestampValue"`
	xxx_hidden_DurationValue          *durationpb.Duration               `protobuf:"bytes,26,opt,name=duration_value,json=durationValue"`
	xxx_hidden_DateValue              *date.Date                         `protobuf:"bytes,56,opt,name=date_value,json=dateValue"`
	xxx_hidden_DatetimeValue          *datetime.DateTime                 `protobuf:"bytes,57,opt,name=datetime_value,json=datetimeValue"`
	xxx_hidden_TimeofdayValue         *timeofday.TimeOfDay               `protobuf:"bytes,58,opt,name=timeofday_value,json=timeofdayValue"`
	xxx_hidden_StringWrapperValue     *wrapperspb.StringValue            `protobuf:"bytes,27,opt,name=string_wrapper_value,json=stringWrapperValue"`
	xxx_hidden_Int32WrapperValue      *wrapperspb.Int32Value             `protobuf:"bytes,28,opt,name=int32_wrapper_value,json=int32WrapperValue"`
	xxx_hidden_Int64WrapperValue      *wrapperspb.Int64Value             `protobuf:"bytes,29,opt,name=int64_wrapper_value,json=int64WrapperValue"`
	xxx_hidden_Uint32WrapperValue     *wrapperspb.UInt32Value            `protobuf:"bytes,30,opt,name=uint32_wrapper_value,json=uint32WrapperValue"`
	xxx_hidden_Uint64WrapperValue     *wrapperspb.UInt64Value            `protobuf:"bytes,31,opt,name=uint64_wrapper_value,json=uint64WrapperValue"`
	xxx_hidden_BoolWrapperValue       *wrapperspb.BoolValue              `protobuf:"bytes,32,opt,name=bool_wrapper_value,json=boolWrapperValue"`
	xxx_hidden_FloatWrapperValue      *wrapperspb.FloatValue             `protobuf:"bytes,33,opt,name=float_wrapper_value,json=floatWrapperValue"`
	xxx_hidden_DoubleWrapperValue     *wrapperspb.DoubleValue            `protobuf:"bytes,34,opt,name=double_wrapper_value,json=doubleWrapperValue"`
	xxx_hidden_BytesWrapperValue      *wrapperspb.BytesValue             `protobuf:"bytes,35,opt,name=bytes_wrapper_value,json=bytesWrapperValue"`
	xxx_hidden_RepeatedStringWrapper  *[]*wrapperspb.StringValue         `protobuf:"bytes,36,rep,name=repeated_string_wrapper,json=repeatedStringWrapper"`
	xxx_hidden_RepeatedInt32Wrapper   *[]*wrapperspb.Int32Value          `protobuf:"bytes,37,rep,name=repeated_int32_wrapper,json=repeatedInt32Wrapper"`
	xxx_hidden_RepeatedTimestamp      *[]*timestamppb.Timestamp          `protobuf:"bytes,38,rep,name=repeated_timestamp,json=repeatedTimestamp"`
	xxx_hidden_MapStringInt32Wrapper  map[string]*wrapperspb.Int32Value  `protobuf:"bytes,39,rep,name=map_string_int32_wrapper,json=mapStringInt32Wrapper" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringStringWrapper map[string]*wrapperspb.StringValue `protobuf:"bytes,40,rep,name=map_string_string_wrapper,json=mapStringStringWrapper" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringTimestamp     map[string]*timestamppb.Timestamp  `protobuf:"bytes,41,rep,name=map_string_timestamp,json=mapStringTimestamp" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_LatlngValue            *latlng.LatLng                     `protobuf:"bytes,42,opt,name=latlng_value,json=latlngValue"`
	xxx_hidden_GeographyString        *string                            `protobuf:"bytes,43,opt,name=geography_string,json=geographyString"`
	xxx_hidden_DurationString         *string                            `protobuf:"bytes,44,opt,name=duration_string,json=durationString"`
	xxx_hidden_IntervalString         *string                            `protobuf:"bytes,45,opt,name=interval_string,json=intervalString"`
	xxx_hidden_DateRange              *DateRange                         `protobuf:"bytes,46,opt,name=date_range,json=dateRange"`
	xxx_hidden_TimestampRange         *TimestampRange                    `protobuf:"bytes,47,opt,name=timestamp_range,json=timestampRange"`
	xxx_hidden_DatetimeRange          *DateTimeRange                     `protobuf:"bytes,48,opt,name=datetime_range,json=datetimeRange"`
	xxx_hidden_RepeatedDuration       *[]*durationpb.Duration            `protobuf:"bytes,49,rep,name=repeated_duration,json=repeatedDuration"`
	xxx_hidden_RepeatedLatlng         *[]*latlng.LatLng                  `protobuf:"bytes,50,rep,name=repeated_latlng,json=repeatedLatlng"`
	xxx_hidden_RepeatedDateRange      *[]*DateRange                      `protobuf:"bytes,51,rep,name=repeated_date_range,json=repeatedDateRange"`
	xxx_hidden_RepeatedTimestampRange *[]*TimestampRange                 `protobuf:"bytes,52,rep,name=repeated_timestamp_range,json=repeatedTimestampRange"`
	xxx_hidden_RepeatedDate           *[]*date.Date                      `protobuf:"bytes,59,rep,name=repeated_date,json=repeatedDate"`
	xxx_hidden_RepeatedDatetime       *[]*datetime.DateTime              `protobuf:"bytes,60,rep,name=repeated_datetime,json=repeatedDatetime"`
	xxx_hidden_RepeatedTimeofday      *[]*timeofday.TimeOfDay            `protobuf:"bytes,61,rep,name=repeated_timeofday,json=repeatedTimeofday"`
	xxx_hidden_MapStringDuration      map[string]*durationpb.Duration    `protobuf:"bytes,53,rep,name=map_string_duration,json=mapStringDuration" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringLatlng        map[string]*latlng.LatLng          `protobuf:"bytes,54,rep,name=map_string_latlng,json=mapStringLatlng" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringDateRange     map[string]*DateRange              `protobuf:"bytes,55,rep,name=map_string_date_range,json=mapStringDateRange" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringDate          map[string]*date.Date              `protobuf:"bytes,62,rep,name=map_string_date,json=mapStringDate" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringDatetime      map[string]*datetime.DateTime      `protobuf:"bytes,63,rep,name=map_string_datetime,json=mapStringDatetime" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MapStringTimeofday     map[string]*timeofday.TimeOfDay    `protobuf:"bytes,64,rep,name=map_string_timeofday,json=mapStringTimeofday" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [2]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *KitchenSink) Reset() {
	*x = KitchenSink{}
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KitchenSink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenSink) ProtoMessage() {}

func (x *KitchenSink) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KitchenSink) GetDoubleValue() float64 {
	if x != nil {
		return x.xxx_hidden_DoubleValue
	}
	return 0
}

func (x *KitchenSink) GetFloatValue() float32 {
	if x != nil {
		return x.xxx_hidden_FloatValue
	}
	return 0
}

func (x *KitchenSink) GetInt32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Int32Value
	}
	return 0
}

func (x *KitchenSink) GetInt64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Int64Value
	}
	return 0
}

func (x *KitchenSink) GetSint32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sint32Value
	}
	return 0
}

func (x *KitchenSink) GetSint64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sint64Value
	}
	return 0
}

func (x *KitchenSink) GetUint32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Uint32Value
	}
	return 0
}

func (x *KitchenSink) GetUint64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Uint64Value
	}
	return 0
}

func (x *KitchenSink) GetFixed32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Fixed32Value
	}
	return 0
}

func (x *KitchenSink) GetFixed64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Fixed64Value
	}
	return 0
}

func (x *KitchenSink) GetSfixed32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sfixed32Value
	}
	return 0
}

func (x *KitchenSink) GetSfixed64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sfixed64Value
	}
	return 0
}

func (x *KitchenSink) GetBoolValue() bool {
	if x != nil {
		return x.xxx_hidden_BoolValue
	}
	return false
}

func (x *KitchenSink) GetStringValue() string {
	if x != nil {
		if x.xxx_hidden_StringValue != nil {
			return *x.xxx_hidden_StringValue
		}
		return ""
	}
	return ""
}

func (x *KitchenSink) GetBytesValue() []byte {
	if x != nil {
		return x.xxx_hidden_BytesValue
	}
	return nil
}

func (x *KitchenSink) GetEnumValue() TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 15) {
			return x.xxx_hidden_EnumValue
		}
	}
	return TestEnum_TEST_ENUM_UNSPECIFIED
}

func (x *KitchenSink) GetRepeatedString() []string {
	if x != nil {
		return x.xxx_hidden_RepeatedString
	}
	return nil
}

func (x *KitchenSink) GetRepeatedInt32() []int32 {
	if x != nil {
		return x.xxx_hidden_RepeatedInt32
	}
	return nil
}

func (x *KitchenSink) GetRepeatedNested() []*NestedMessage {
	if x != nil {
		if x.xxx_hidden_RepeatedNested != nil {
			return *x.xxx_hidden_RepeatedNested
		}
	}
	return nil
}

func (x *KitchenSink) GetNestedMessage() *NestedMessage {
	if x != nil {
		return x.xxx_hidden_NestedMessage
	}
	return nil
}

func (x *KitchenSink) GetMapStringString() map[string]string {
	if x != nil {
		return x.xxx_hidden_MapStringString
	}
	return nil
}

func (x *KitchenSink) GetMapStringInt32() map[string]int32 {
	if x != nil {
		return x.xxx_hidden_MapStringInt32
	}
	return nil
}

func (x *KitchenSink) GetMapInt32String() map[int32]string {
	if x != nil {
		return x.xxx_hidden_MapInt32String
	}
	return nil
}

func (x *KitchenSink) GetMapStringNested() map[string]*NestedMessage {
	if x != nil {
		return x.xxx_hidden_MapStringNested
	}
	return nil
}

func (x *KitchenSink) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TimestampValue
	}
	return nil
}

func (x *KitchenSink) GetDurationValue() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_DurationValue
	}
	return nil
}

func (x *KitchenSink) GetDateValue() *date.Date {
	if x != nil {
		return x.xxx_hidden_DateValue
	}
	return nil
}

func (x *KitchenSink) GetDatetimeValue() *datetime.DateTime {
	if x != nil {
		return x.xxx_hidden_DatetimeValue
	}
	return nil
}

func (x *KitchenSink) GetTimeofdayValue() *timeofday.TimeOfDay {
	if x != nil {
		return x.xxx_hidden_TimeofdayValue
	}
	return nil
}

func (x *KitchenSink) GetStringWrapperValue() *wrapperspb.StringValue {
	if x != nil {
		return x.xxx_hidden_StringWrapperValue
	}
	return nil
}

func (x *KitchenSink) GetInt32WrapperValue() *wrapperspb.Int32Value {
	if x != nil {
		return x.xxx_hidden_Int32WrapperValue
	}
	return nil
}

func (x *KitchenSink) GetInt64WrapperValue() *wrapperspb.Int64Value {
	if x != nil {
		return x.xxx_hidden_Int64WrapperValue
	}
	return nil
}

func (x *KitchenSink) GetUint32WrapperValue() *wrapperspb.UInt32Value {
	if x != nil {
		return x.xxx_hidden_Uint32WrapperValue
	}
	return nil
}

func (x *KitchenSink) GetUint64WrapperValue() *wrapperspb.UInt64Value {
	if x != nil {
		return x.xxx_hidden_Uint64WrapperValue
	}
	return nil
}

func (x *KitchenSink) GetBoolWrapperValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.xxx_hidden_BoolWrapperValue
	}
	return nil
}

func (x *KitchenSink) GetFloatWrapperValue() *wrapperspb.FloatValue {
	if x != nil {
		return x.xxx_hidden_FloatWrapperValue
	}
	return nil
}

func (x *KitchenSink) GetDoubleWrapperValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.xxx_hidden_DoubleWrapperValue
	}
	return nil
}

func (x *KitchenSink) GetBytesWrapperValue() *wrapperspb.BytesValue {
	if x != nil {
		return x.xxx_hidden_BytesWrapperValue
	}
	return nil
}

func (x *KitchenSink) GetRepeatedStringWrapper() []*wrapperspb.StringValue {
	if x != nil {
		if x.xxx_hidden_RepeatedStringWrapper != nil {
			return *x.xxx_hidden_RepeatedStringWrapper
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedInt32Wrapper() []*wrapperspb.Int32Value {
	if x != nil {
		if x.xxx_hidden_RepeatedInt32Wrapper != nil {
			return *x.xxx_hidden_RepeatedInt32Wrapper
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedTimestamp() []*timestamppb.Timestamp {
	if x != nil {
		if x.xxx_hidden_RepeatedTimestamp != nil {
			return *x.xxx_hidden_RepeatedTimestamp
		}
	}
	return nil
}

func (x *KitchenSink) GetMapStringInt32Wrapper() map[string]*wrapperspb.Int32Value {
	if x != nil {
		return x.xxx_hidden_MapStringInt32Wrapper
	}
	return nil
}

func (x *KitchenSink) GetMapStringStringWrapper() map[string]*wrapperspb.StringValue {
	if x != nil {
		return x.xxx_hidden_MapStringStringWrapper
	}
	return nil
}

func (x *KitchenSink) GetMapStringTimestamp() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_MapStringTimestamp
	}
	return nil
}

func (x *KitchenSink) GetLatlngValue() *latlng.LatLng {
	if x != nil {
		return x.xxx_hidden_LatlngValue
	}
	return nil
}

func (x *KitchenSink) GetGeographyString() string {
	if x != nil {
		if x.xxx_hidden_GeographyString != nil {
			return *x.xxx_hidden_GeographyString
		}
		return ""
	}
	return ""
}

func (x *KitchenSink) GetDurationString() string {
	if x != nil {
		if x.xxx_hidden_DurationString != nil {
			return *x.xxx_hidden_DurationString
		}
		return ""
	}
	return ""
}

func (x *KitchenSink) GetIntervalString() string {
	if x != nil {
		if x.xxx_hidden_IntervalString != nil {
			return *x.xxx_hidden_IntervalString
		}
		return ""
	}
	return ""
}

func (x *KitchenSink) GetDateRange() *DateRange {
	if x != nil {
		return x.xxx_hidden_DateRange
	}
	return nil
}

func (x *KitchenSink) GetTimestampRange() *TimestampRange {
	if x != nil {
		return x.xxx_hidden_TimestampRange
	}
	return nil
}

func (x *KitchenSink) GetDatetimeRange() *DateTimeRange {
	if x != nil {
		return x.xxx_hidden_DatetimeRange
	}
	return nil
}

func (x *KitchenSink) GetRepeatedDuration() []*durationpb.Duration {
	if x != nil {
		if x.xxx_hidden_RepeatedDuration != nil {
			return *x.xxx_hidden_RepeatedDuration
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedLatlng() []*latlng.LatLng {
	if x != nil {
		if x.xxx_hidden_RepeatedLatlng != nil {
			return *x.xxx_hidden_RepeatedLatlng
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedDateRange() []*DateRange {
	if x != nil {
		if x.xxx_hidden_RepeatedDateRange != nil {
			return *x.xxx_hidden_RepeatedDateRange
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedTimestampRange() []*TimestampRange {
	if x != nil {
		if x.xxx_hidden_RepeatedTimestampRange != nil {
			return *x.xxx_hidden_RepeatedTimestampRange
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedDate() []*date.Date {
	if x != nil {
		if x.xxx_hidden_RepeatedDate != nil {
			return *x.xxx_hidden_RepeatedDate
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedDatetime() []*datetime.DateTime {
	if x != nil {
		if x.xxx_hidden_RepeatedDatetime != nil {
			return *x.xxx_hidden_RepeatedDatetime
		}
	}
	return nil
}

func (x *KitchenSink) GetRepeatedTimeofday() []*timeofday.TimeOfDay {
	if x != nil {
		if x.xxx_hidden_RepeatedTimeofday != nil {
			return *x.xxx_hidden_RepeatedTimeofday
		}
	}
	return nil
}

func (x *KitchenSink) GetMapStringDuration() map[string]*durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_MapStringDuration
	}
	return nil
}

func (x *KitchenSink) GetMapStringLatlng() map[string]*latlng.LatLng {
	if x != nil {
		return x.xxx_hidden_MapStringLatlng
	}
	return nil
}

func (x *KitchenSink) GetMapStringDateRange() map[string]*DateRange {
	if x != nil {
		return x.xxx_hidden_MapStringDateRange
	}
	return nil
}

func (x *KitchenSink) GetMapStringDate() map[string]*date.Date {
	if x != nil {
		return x.xxx_hidden_MapStringDate
	}
	return nil
}

func (x *KitchenSink) GetMapStringDatetime() map[string]*datetime.DateTime {
	if x != nil {
		return x.xxx_hidden_MapStringDatetime
	}
	return nil
}

func (x *KitchenSink) GetMapStringTimeofday() map[string]*timeofday.TimeOfDay {
	if x != nil {
		return x.xxx_hidden_MapStringTimeofday
	}
	return nil
}

func (x *KitchenSink) SetDoubleValue(v float64) {
	x.xxx_hidden_DoubleValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 64)
}

func (x *KitchenSink) SetFloatValue(v float32) {
	x.xxx_hidden_FloatValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 64)
}

func (x *KitchenSink) SetInt32Value(v int32) {
	x.xxx_hidden_Int32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 64)
}

func (x *KitchenSink) SetInt64Value(v int64) {
	x.xxx_hidden_Int64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 64)
}

func (x *KitchenSink) SetSint32Value(v int32) {
	x.xxx_hidden_Sint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 64)
}

func (x *KitchenSink) SetSint64Value(v int64) {
	x.xxx_hidden_Sint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 64)
}

func (x *KitchenSink) SetUint32Value(v uint32) {
	x.xxx_hidden_Uint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 64)
}

func (x *KitchenSink) SetUint64Value(v uint64) {
	x.xxx_hidden_Uint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 64)
}

func (x *KitchenSink) SetFixed32Value(v uint32) {
	x.xxx_hidden_Fixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 64)
}

func (x *KitchenSink) SetFixed64Value(v uint64) {
	x.xxx_hidden_Fixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 64)
}

func (x *KitchenSink) SetSfixed32Value(v int32) {
	x.xxx_hidden_Sfixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 64)
}

func (x *KitchenSink) SetSfixed64Value(v int64) {
	x.xxx_hidden_Sfixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 64)
}

func (x *KitchenSink) SetBoolValue(v bool) {
	x.xxx_hidden_BoolValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 64)
}

func (x *KitchenSink) SetStringValue(v string) {
	x.xxx_hidden_StringValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 64)
}

func (x *KitchenSink) SetBytesValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_BytesValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 64)
}

func (x *KitchenSink) SetEnumValue(v TestEnum) {
	x.xxx_hidden_EnumValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 64)
}

func (x *KitchenSink) SetRepeatedString(v []string) {
	x.xxx_hidden_RepeatedString = v
}

func (x *KitchenSink) SetRepeatedInt32(v []int32) {
	x.xxx_hidden_RepeatedInt32 = v
}

func (x *KitchenSink) SetRepeatedNested(v []*NestedMessage) {
	x.xxx_hidden_RepeatedNested = &v
}

func (x *KitchenSink) SetNestedMessage(v *NestedMessage) {
	x.xxx_hidden_NestedMessage = v
}

func (x *KitchenSink) SetMapStringString(v map[string]string) {
	x.xxx_hidden_MapStringString = v
}

func (x *KitchenSink) SetMapStringInt32(v map[string]int32) {
	x.xxx_hidden_MapStringInt32 = v
}

func (x *KitchenSink) SetMapInt32String(v map[int32]string) {
	x.xxx_hidden_MapInt32String = v
}

func (x *KitchenSink) SetMapStringNested(v map[string]*NestedMessage) {
	x.xxx_hidden_MapStringNested = v
}

func (x *KitchenSink) SetTimestampValue(v *timestamppb.Timestamp) {
	x.xxx_hidden_TimestampValue = v
}

func (x *KitchenSink) SetDurationValue(v *durationpb.Duration) {
	x.xxx_hidden_DurationValue = v
}

func (x *KitchenSink) SetDateValue(v *date.Date) {
	x.xxx_hidden_DateValue = v
}

func (x *KitchenSink) SetDatetimeValue(v *datetime.DateTime) {
	x.xxx_hidden_DatetimeValue = v
}

func (x *KitchenSink) SetTimeofdayValue(v *timeofday.TimeOfDay) {
	x.xxx_hidden_TimeofdayValue = v
}

func (x *KitchenSink) SetStringWrapperValue(v *wrapperspb.StringValue) {
	x.xxx_hidden_StringWrapperValue = v
}

func (x *KitchenSink) SetInt32WrapperValue(v *wrapperspb.Int32Value) {
	x.xxx_hidden_Int32WrapperValue = v
}

func (x *KitchenSink) SetInt64WrapperValue(v *wrapperspb.Int64Value) {
	x.xxx_hidden_Int64WrapperValue = v
}

func (x *KitchenSink) SetUint32WrapperValue(v *wrapperspb.UInt32Value) {
	x.xxx_hidden_Uint32WrapperValue = v
}

func (x *KitchenSink) SetUint64WrapperValue(v *wrapperspb.UInt64Value) {
	x.xxx_hidden_Uint64WrapperValue = v
}

func (x *KitchenSink) SetBoolWrapperValue(v *wrapperspb.BoolValue) {
	x.xxx_hidden_BoolWrapperValue = v
}

func (x *KitchenSink) SetFloatWrapperValue(v *wrapperspb.FloatValue) {
	x.xxx_hidden_FloatWrapperValue = v
}

func (x *KitchenSink) SetDoubleWrapperValue(v *wrapperspb.DoubleValue) {
	x.xxx_hidden_DoubleWrapperValue = v
}

func (x *KitchenSink) SetBytesWrapperValue(v *wrapperspb.BytesValue) {
	x.xxx_hidden_BytesWrapperValue = v
}

func (x *KitchenSink) SetRepeatedStringWrapper(v []*wrapperspb.StringValue) {
	x.xxx_hidden_RepeatedStringWrapper = &v
}

func (x *KitchenSink) SetRepeatedInt32Wrapper(v []*wrapperspb.Int32Value) {
	x.xxx_hidden_RepeatedInt32Wrapper = &v
}

func (x *KitchenSink) SetRepeatedTimestamp(v []*timestamppb.Timestamp) {
	x.xxx_hidden_RepeatedTimestamp = &v
}

func (x *KitchenSink) SetMapStringInt32Wrapper(v map[string]*wrapperspb.Int32Value) {
	x.xxx_hidden_MapStringInt32Wrapper = v
}

func (x *KitchenSink) SetMapStringStringWrapper(v map[string]*wrapperspb.StringValue) {
	x.xxx_hidden_MapStringStringWrapper = v
}

func (x *KitchenSink) SetMapStringTimestamp(v map[string]*timestamppb.Timestamp) {
	x.xxx_hidden_MapStringTimestamp = v
}

func (x *KitchenSink) SetLatlngValue(v *latlng.LatLng) {
	x.xxx_hidden_LatlngValue = v
}

func (x *KitchenSink) SetGeographyString(v string) {
	x.xxx_hidden_GeographyString = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 45, 64)
}

func (x *KitchenSink) SetDurationString(v string) {
	x.xxx_hidden_DurationString = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 46, 64)
}

func (x *KitchenSink) SetIntervalString(v string) {
	x.xxx_hidden_IntervalString = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 47, 64)
}

func (x *KitchenSink) SetDateRange(v *DateRange) {
	x.xxx_hidden_DateRange = v
}

func (x *KitchenSink) SetTimestampRange(v *TimestampRange) {
	x.xxx_hidden_TimestampRange = v
}

func (x *KitchenSink) SetDatetimeRange(v *DateTimeRange) {
	x.xxx_hidden_DatetimeRange = v
}

func (x *KitchenSink) SetRepeatedDuration(v []*durationpb.Duration) {
	x.xxx_hidden_RepeatedDuration = &v
}

func (x *KitchenSink) SetRepeatedLatlng(v []*latlng.LatLng) {
	x.xxx_hidden_RepeatedLatlng = &v
}

func (x *KitchenSink) SetRepeatedDateRange(v []*DateRange) {
	x.xxx_hidden_RepeatedDateRange = &v
}

func (x *KitchenSink) SetRepeatedTimestampRange(v []*TimestampRange) {
	x.xxx_hidden_RepeatedTimestampRange = &v
}

func (x *KitchenSink) SetRepeatedDate(v []*date.Date) {
	x.xxx_hidden_RepeatedDate = &v
}

func (x *KitchenSink) SetRepeatedDatetime(v []*datetime.DateTime) {
	x.xxx_hidden_RepeatedDatetime = &v
}

func (x *KitchenSink) SetRepeatedTimeofday(v []*timeofday.TimeOfDay) {
	x.xxx_hidden_RepeatedTimeofday = &v
}

func (x *KitchenSink) SetMapStringDuration(v map[string]*durationpb.Duration) {
	x.xxx_hidden_MapStringDuration = v
}

func (x *KitchenSink) SetMapStringLatlng(v map[string]*latlng.LatLng) {
	x.xxx_hidden_MapStringLatlng = v
}

func (x *KitchenSink) SetMapStringDateRange(v map[string]*DateRange) {
	x.xxx_hidden_MapStringDateRange = v
}

func (x *KitchenSink) SetMapStringDate(v map[string]*date.Date) {
	x.xxx_hidden_MapStringDate = v
}

func (x *KitchenSink) SetMapStringDatetime(v map[string]*datetime.DateTime) {
	x.xxx_hidden_MapStringDatetime = v
}

func (x *KitchenSink) SetMapStringTimeofday(v map[string]*timeofday.TimeOfDay) {
	x.xxx_hidden_MapStringTimeofday = v
}

func (x *KitchenSink) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *KitchenSink) HasFloatValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *KitchenSink) HasInt32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *KitchenSink) HasInt64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *KitchenSink) HasSint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *KitchenSink) HasSint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *KitchenSink) HasUint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *KitchenSink) HasUint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *KitchenSink) HasFixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *KitchenSink) HasFixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *KitchenSink) HasSfixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *KitchenSink) HasSfixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *KitchenSink) HasBoolValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *KitchenSink) HasStringValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *KitchenSink) HasBytesValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *KitchenSink) HasEnumValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *KitchenSink) HasNestedMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NestedMessage != nil
}

func (x *KitchenSink) HasTimestampValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimestampValue != nil
}

func (x *KitchenSink) HasDurationValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DurationValue != nil
}

func (x *KitchenSink) HasDateValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateValue != nil
}

func (x *KitchenSink) HasDatetimeValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatetimeValue != nil
}

func (x *KitchenSink) HasTimeofdayValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimeofdayValue != nil
}

func (x *KitchenSink) HasStringWrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StringWrapperValue != nil
}

func (x *KitchenSink) HasInt32WrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Int32WrapperValue != nil
}

func (x *KitchenSink) HasInt64WrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Int64WrapperValue != nil
}

func (x *KitchenSink) HasUint32WrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Uint32WrapperValue != nil
}

func (x *KitchenSink) HasUint64WrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Uint64WrapperValue != nil
}

func (x *KitchenSink) HasBoolWrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BoolWrapperValue != nil
}

func (x *KitchenSink) HasFloatWrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FloatWrapperValue != nil
}

func (x *KitchenSink) HasDoubleWrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DoubleWrapperValue != nil
}

func (x *KitchenSink) HasBytesWrapperValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BytesWrapperValue != nil
}

func (x *KitchenSink) HasLatlngValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LatlngValue != nil
}

func (x *KitchenSink) HasGeographyString() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 45)
}

func (x *KitchenSink) HasDurationString() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 46)
}

func (x *KitchenSink) HasIntervalString() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 47)
}

func (x *KitchenSink) HasDateRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateRange != nil
}

func (x *KitchenSink) HasTimestampRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimestampRange != nil
}

func (x *KitchenSink) HasDatetimeRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatetimeRange != nil
}

func (x *KitchenSink) ClearDoubleValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DoubleValue = 0
}

func (x *KitchenSink) ClearFloatValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FloatValue = 0
}

func (x *KitchenSink) ClearInt32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Int32Value = 0
}

func (x *KitchenSink) ClearInt64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Int64Value = 0
}

func (x *KitchenSink) ClearSint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Sint32Value = 0
}

func (x *KitchenSink) ClearSint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Sint64Value = 0
}

func (x *KitchenSink) ClearUint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Uint32Value = 0
}

func (x *KitchenSink) ClearUint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Uint64Value = 0
}

func (x *KitchenSink) ClearFixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Fixed32Value = 0
}

func (x *KitchenSink) ClearFixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Fixed64Value = 0
}

func (x *KitchenSink) ClearSfixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Sfixed32Value = 0
}

func (x *KitchenSink) ClearSfixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Sfixed64Value = 0
}

func (x *KitchenSink) ClearBoolValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_BoolValue = false
}

func (x *KitchenSink) ClearStringValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_StringValue = nil
}

func (x *KitchenSink) ClearBytesValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_BytesValue = nil
}

func (x *KitchenSink) ClearEnumValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_EnumValue = TestEnum_TEST_ENUM_UNSPECIFIED
}

func (x *KitchenSink) ClearNestedMessage() {
	x.xxx_hidden_NestedMessage = nil
}

func (x *KitchenSink) ClearTimestampValue() {
	x.xxx_hidden_TimestampValue = nil
}

func (x *KitchenSink) ClearDurationValue() {
	x.xxx_hidden_DurationValue = nil
}

func (x *KitchenSink) ClearDateValue() {
	x.xxx_hidden_DateValue = nil
}

func (x *KitchenSink) ClearDatetimeValue() {
	x.xxx_hidden_DatetimeValue = nil
}

func (x *KitchenSink) ClearTimeofdayValue() {
	x.xxx_hidden_TimeofdayValue = nil
}

func (x *KitchenSink) ClearStringWrapperValue() {
	x.xxx_hidden_StringWrapperValue = nil
}

func (x *KitchenSink) ClearInt32WrapperValue() {
	x.xxx_hidden_Int32WrapperValue = nil
}

func (x *KitchenSink) ClearInt64WrapperValue() {
	x.xxx_hidden_Int64WrapperValue = nil
}

func (x *KitchenSink) ClearUint32WrapperValue() {
	x.xxx_hidden_Uint32WrapperValue = nil
}

func (x *KitchenSink) ClearUint64WrapperValue() {
	x.xxx_hidden_Uint64WrapperValue = nil
}

func (x *KitchenSink) ClearBoolWrapperValue() {
	x.xxx_hidden_BoolWrapperValue = nil
}

func (x *KitchenSink) ClearFloatWrapperValue() {
	x.xxx_hidden_FloatWrapperValue = nil
}

func (x *KitchenSink) ClearDoubleWrapperValue() {
	x.xxx_hidden_DoubleWrapperValue = nil
}

func (x *KitchenSink) ClearBytesWrapperValue() {
	x.xxx_hidden_BytesWrapperValue = nil
}

func (x *KitchenSink) ClearLatlngValue() {
	x.xxx_hidden_LatlngValue = nil
}

func (x *KitchenSink) ClearGeographyString() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 45)
	x.xxx_hidden_GeographyString = nil
}

func (x *KitchenSink) ClearDurationString() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 46)
	x.xxx_hidden_DurationString = nil
}

func (x *KitchenSink) ClearIntervalString() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 47)
	x.xxx_hidden_IntervalString = nil
}

func (x *KitchenSink) ClearDateRange() {
	x.xxx_hidden_DateRange = nil
}

func (x *KitchenSink) ClearTimestampRange() {
	x.xxx_hidden_TimestampRange = nil
}

func (x *KitchenSink) ClearDatetimeRange() {
	x.xxx_hidden_DatetimeRange = nil
}

type KitchenSink_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Floating point types
	DoubleValue *float64
	FloatValue  *float32
	// Signed integer types
	Int32Value  *int32
	Int64Value  *int64
	Sint32Value *int32
	Sint64Value *int64
	// Unsigned integer types
	Uint32Value *uint32
	Uint64Value *uint64
	// Fixed-width integer types
	Fixed32Value  *uint32
	Fixed64Value  *uint64
	Sfixed32Value *int32
	Sfixed64Value *int64
	// Boolean type
	BoolValue *bool
	// String and bytes types
	StringValue *string
	BytesValue  []byte
	// Enum type
	EnumValue *TestEnum
	// Repeated fields (arrays)
	RepeatedString []string
	RepeatedInt32  []int32
	RepeatedNested []*NestedMessage
	// Nested message
	NestedMessage *NestedMessage
	// Map fields
	MapStringString map[string]string
	MapStringInt32  map[string]int32
	MapInt32String  map[int32]string
	MapStringNested map[string]*NestedMessage
	// Well-known type fields for testing
	TimestampValue *timestamppb.Timestamp
	DurationValue  *durationpb.Duration
	DateValue      *date.Date
	DatetimeValue  *datetime.DateTime
	TimeofdayValue *timeofday.TimeOfDay
	// Wrapper types
	StringWrapperValue *wrapperspb.StringValue
	Int32WrapperValue  *wrapperspb.Int32Value
	Int64WrapperValue  *wrapperspb.Int64Value
	Uint32WrapperValue *wrapperspb.UInt32Value
	Uint64WrapperValue *wrapperspb.UInt64Value
	BoolWrapperValue   *wrapperspb.BoolValue
	FloatWrapperValue  *wrapperspb.FloatValue
	DoubleWrapperValue *wrapperspb.DoubleValue
	BytesWrapperValue  *wrapperspb.BytesValue
	// Repeated well-known types
	RepeatedStringWrapper []*wrapperspb.StringValue
	RepeatedInt32Wrapper  []*wrapperspb.Int32Value
	RepeatedTimestamp     []*timestamppb.Timestamp
	// Maps with well-known type values
	MapStringInt32Wrapper  map[string]*wrapperspb.Int32Value
	MapStringStringWrapper map[string]*wrapperspb.StringValue
	MapStringTimestamp     map[string]*timestamppb.Timestamp
	// Geography and specialized types for testing
	LatlngValue     *latlng.LatLng
	GeographyString *string
	DurationString  *string
	IntervalString  *string
	// Range types for testing - represent BigQuery RANGE<T> types
	DateRange      *DateRange
	TimestampRange *TimestampRange
	DatetimeRange  *DateTimeRange
	// Collections of well-known types and ranges for complex integration testing
	RepeatedDuration       []*durationpb.Duration
	RepeatedLatlng         []*latlng.LatLng
	RepeatedDateRange      []*DateRange
	RepeatedTimestampRange []*TimestampRange
	RepeatedDate           []*date.Date
	RepeatedDatetime       []*datetime.DateTime
	RepeatedTimeofday      []*timeofday.TimeOfDay
	// Maps with well-known type and range values
	MapStringDuration  map[string]*durationpb.Duration
	MapStringLatlng    map[string]*latlng.LatLng
	MapStringDateRange map[string]*DateRange
	MapStringDate      map[string]*date.Date
	MapStringDatetime  map[string]*datetime.DateTime
	MapStringTimeofday map[string]*timeofday.TimeOfDay
}

func (b0 KitchenSink_builder) Build() *KitchenSink {
	m0 := &KitchenSink{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DoubleValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 64)
		x.xxx_hidden_DoubleValue = *b.DoubleValue
	}
	if b.FloatValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 64)
		x.xxx_hidden_FloatValue = *b.FloatValue
	}
	if b.Int32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 64)
		x.xxx_hidden_Int32Value = *b.Int32Value
	}
	if b.Int64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 64)
		x.xxx_hidden_Int64Value = *b.Int64Value
	}
	if b.Sint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 64)
		x.xxx_hidden_Sint32Value = *b.Sint32Value
	}
	if b.Sint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 64)
		x.xxx_hidden_Sint64Value = *b.Sint64Value
	}
	if b.Uint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 64)
		x.xxx_hidden_Uint32Value = *b.Uint32Value
	}
	if b.Uint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 64)
		x.xxx_hidden_Uint64Value = *b.Uint64Value
	}
	if b.Fixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 64)
		x.xxx_hidden_Fixed32Value = *b.Fixed32Value
	}
	if b.Fixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 64)
		x.xxx_hidden_Fixed64Value = *b.Fixed64Value
	}
	if b.Sfixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 64)
		x.xxx_hidden_Sfixed32Value = *b.Sfixed32Value
	}
	if b.Sfixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 64)
		x.xxx_hidden_Sfixed64Value = *b.Sfixed64Value
	}
	if b.BoolValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 64)
		x.xxx_hidden_BoolValue = *b.BoolValue
	}
	if b.StringValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 64)
		x.xxx_hidden_StringValue = b.StringValue
	}
	if b.BytesValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 64)
		x.xxx_hidden_BytesValue = b.BytesValue
	}
	if b.EnumValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 64)
		x.xxx_hidden_EnumValue = *b.EnumValue
	}
	x.xxx_hidden_RepeatedString = b.RepeatedString
	x.xxx_hidden_RepeatedInt32 = b.RepeatedInt32
	x.xxx_hidden_RepeatedNested = &b.RepeatedNested
	x.xxx_hidden_NestedMessage = b.NestedMessage
	x.xxx_hidden_MapStringString = b.MapStringString
	x.xxx_hidden_MapStringInt32 = b.MapStringInt32
	x.xxx_hidden_MapInt32String = b.MapInt32String
	x.xxx_hidden_MapStringNested = b.MapStringNested
	x.xxx_hidden_TimestampValue = b.TimestampValue
	x.xxx_hidden_DurationValue = b.DurationValue
	x.xxx_hidden_DateValue = b.DateValue
	x.xxx_hidden_DatetimeValue = b.DatetimeValue
	x.xxx_hidden_TimeofdayValue = b.TimeofdayValue
	x.xxx_hidden_StringWrapperValue = b.StringWrapperValue
	x.xxx_hidden_Int32WrapperValue = b.Int32WrapperValue
	x.xxx_hidden_Int64WrapperValue = b.Int64WrapperValue
	x.xxx_hidden_Uint32WrapperValue = b.Uint32WrapperValue
	x.xxx_hidden_Uint64WrapperValue = b.Uint64WrapperValue
	x.xxx_hidden_BoolWrapperValue = b.BoolWrapperValue
	x.xxx_hidden_FloatWrapperValue = b.FloatWrapperValue
	x.xxx_hidden_DoubleWrapperValue = b.DoubleWrapperValue
	x.xxx_hidden_BytesWrapperValue = b.BytesWrapperValue
	x.xxx_hidden_RepeatedStringWrapper = &b.RepeatedStringWrapper
	x.xxx_hidden_RepeatedInt32Wrapper = &b.RepeatedInt32Wrapper
	x.xxx_hidden_RepeatedTimestamp = &b.RepeatedTimestamp
	x.xxx_hidden_MapStringInt32Wrapper = b.MapStringInt32Wrapper
	x.xxx_hidden_MapStringStringWrapper = b.MapStringStringWrapper
	x.xxx_hidden_MapStringTimestamp = b.MapStringTimestamp
	x.xxx_hidden_LatlngValue = b.LatlngValue
	if b.GeographyString != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 45, 64)
		x.xxx_hidden_GeographyString = b.GeographyString
	}
	if b.DurationString != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 46, 64)
		x.xxx_hidden_DurationString = b.DurationString
	}
	if b.IntervalString != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 47, 64)
		x.xxx_hidden_IntervalString = b.IntervalString
	}
	x.xxx_hidden_DateRange = b.DateRange
	x.xxx_hidden_TimestampRange = b.TimestampRange
	x.xxx_hidden_DatetimeRange = b.DatetimeRange
	x.xxx_hidden_RepeatedDuration = &b.RepeatedDuration
	x.xxx_hidden_RepeatedLatlng = &b.RepeatedLatlng
	x.xxx_hidden_RepeatedDateRange = &b.RepeatedDateRange
	x.xxx_hidden_RepeatedTimestampRange = &b.RepeatedTimestampRange
	x.xxx_hidden_RepeatedDate = &b.RepeatedDate
	x.xxx_hidden_RepeatedDatetime = &b.RepeatedDatetime
	x.xxx_hidden_RepeatedTimeofday = &b.RepeatedTimeofday
	x.xxx_hidden_MapStringDuration = b.MapStringDuration
	x.xxx_hidden_MapStringLatlng = b.MapStringLatlng
	x.xxx_hidden_MapStringDateRange = b.MapStringDateRange
	x.xxx_hidden_MapStringDate = b.MapStringDate
	x.xxx_hidden_MapStringDatetime = b.MapStringDatetime
	x.xxx_hidden_MapStringTimeofday = b.MapStringTimeofday
	return m0
}

// Represents a BigQuery RANGE<DATE> type
type DateRange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Start       *string                `protobuf:"bytes,1,opt,name=start"`
	xxx_hidden_End         *string                `protobuf:"bytes,2,opt,name=end"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DateRange) GetStart() string {
	if x != nil {
		if x.xxx_hidden_Start != nil {
			return *x.xxx_hidden_Start
		}
		return ""
	}
	return ""
}

func (x *DateRange) GetEnd() string {
	if x != nil {
		if x.xxx_hidden_End != nil {
			return *x.xxx_hidden_End
		}
		return ""
	}
	return ""
}

func (x *DateRange) SetStart(v string) {
	x.xxx_hidden_Start = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DateRange) SetEnd(v string) {
	x.xxx_hidden_End = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DateRange) HasStart() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DateRange) HasEnd() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DateRange) ClearStart() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Start = nil
}

func (x *DateRange) ClearEnd() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_End = nil
}

type DateRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Start *string
	End   *string
}

func (b0 DateRange_builder) Build() *DateRange {
	m0 := &DateRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Start != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Start = b.Start
	}
	if b.End != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_End = b.End
	}
	return m0
}

// Represents a BigQuery RANGE<TIMESTAMP> type
type TimestampRange struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start"`
	xxx_hidden_End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TimestampRange) Reset() {
	*x = TimestampRange{}
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampRange) ProtoMessage() {}

func (x *TimestampRange) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimestampRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Start
	}
	return nil
}

func (x *TimestampRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_End
	}
	return nil
}

func (x *TimestampRange) SetStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_Start = v
}

func (x *TimestampRange) SetEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_End = v
}

func (x *TimestampRange) HasStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Start != nil
}

func (x *TimestampRange) HasEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_End != nil
}

func (x *TimestampRange) ClearStart() {
	x.xxx_hidden_Start = nil
}

func (x *TimestampRange) ClearEnd() {
	x.xxx_hidden_End = nil
}

type TimestampRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Start *timestamppb.Timestamp
	End   *timestamppb.Timestamp
}

func (b0 TimestampRange_builder) Build() *TimestampRange {
	m0 := &TimestampRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Start = b.Start
	x.xxx_hidden_End = b.End
	return m0
}

// Represents a BigQuery RANGE<DATETIME> type
type DateTimeRange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Start       *string                `protobuf:"bytes,1,opt,name=start"`
	xxx_hidden_End         *string                `protobuf:"bytes,2,opt,name=end"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DateTimeRange) Reset() {
	*x = DateTimeRange{}
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeRange) ProtoMessage() {}

func (x *DateTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DateTimeRange) GetStart() string {
	if x != nil {
		if x.xxx_hidden_Start != nil {
			return *x.xxx_hidden_Start
		}
		return ""
	}
	return ""
}

func (x *DateTimeRange) GetEnd() string {
	if x != nil {
		if x.xxx_hidden_End != nil {
			return *x.xxx_hidden_End
		}
		return ""
	}
	return ""
}

func (x *DateTimeRange) SetStart(v string) {
	x.xxx_hidden_Start = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DateTimeRange) SetEnd(v string) {
	x.xxx_hidden_End = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DateTimeRange) HasStart() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DateTimeRange) HasEnd() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DateTimeRange) ClearStart() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Start = nil
}

func (x *DateTimeRange) ClearEnd() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_End = nil
}

type DateTimeRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Start *string
	End   *string
}

func (b0 DateTimeRange_builder) Build() *DateTimeRange {
	m0 := &DateTimeRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Start != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Start = b.Start
	}
	if b.End != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_End = b.End
	}
	return m0
}

// Nested message for testing purposes
type NestedMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Text        *string                `protobuf:"bytes,1,opt,name=text"`
	xxx_hidden_Number      int32                  `protobuf:"varint,2,opt,name=number"`
	xxx_hidden_Flag        bool                   `protobuf:"varint,3,opt,name=flag"`
	xxx_hidden_Tags        []string               `protobuf:"bytes,4,rep,name=tags"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NestedMessage) Reset() {
	*x = NestedMessage{}
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedMessage) ProtoMessage() {}

func (x *NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NestedMessage) GetText() string {
	if x != nil {
		if x.xxx_hidden_Text != nil {
			return *x.xxx_hidden_Text
		}
		return ""
	}
	return ""
}

func (x *NestedMessage) GetNumber() int32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *NestedMessage) GetFlag() bool {
	if x != nil {
		return x.xxx_hidden_Flag
	}
	return false
}

func (x *NestedMessage) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *NestedMessage) SetText(v string) {
	x.xxx_hidden_Text = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *NestedMessage) SetNumber(v int32) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *NestedMessage) SetFlag(v bool) {
	x.xxx_hidden_Flag = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *NestedMessage) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *NestedMessage) HasText() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NestedMessage) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NestedMessage) HasFlag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NestedMessage) ClearText() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Text = nil
}

func (x *NestedMessage) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Number = 0
}

func (x *NestedMessage) ClearFlag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Flag = false
}

type NestedMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Text   *string
	Number *int32
	Flag   *bool
	Tags   []string
}

func (b0 NestedMessage_builder) Build() *NestedMessage {
	m0 := &NestedMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Text != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Text = b.Text
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Number = *b.Number
	}
	if b.Flag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Flag = *b.Flag
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

var File_wayplatform_testdata_v1_kitchen_sink_proto protoreflect.FileDescriptor

const file_wayplatform_testdata_v1_kitchen_sink_proto_rawDesc = "" +
	"\n" +
	"*wayplatform/testdata/v1/kitchen_sink.proto\x12\x17wayplatform.testdata.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x16google/type/date.proto\x1a\x1agoogle/type/datetime.proto\x1a\x18google/type/latlng.proto\x1a\x1bgoogle/type/timeofday.proto\"\xee+\n" +
	"\vKitchenSink\x12!\n" +
	"\fdouble_value\x18\x01 \x01(\x01R\vdoubleValue\x12\x1f\n" +
	"\vfloat_value\x18\x02 \x01(\x02R\n" +
	"floatValue\x12\x1f\n" +
	"\vint32_value\x18\x03 \x01(\x05R\n" +
	"int32Value\x12\x1f\n" +
	"\vint64_value\x18\x04 \x01(\x03R\n" +
	"int64Value\x12!\n" +
	"\fsint32_value\x18\x05 \x01(\x11R\vsint32Value\x12!\n" +
	"\fsint64_value\x18\x06 \x01(\x12R\vsint64Value\x12!\n" +
	"\fuint32_value\x18\a \x01(\rR\vuint32Value\x12!\n" +
	"\fuint64_value\x18\b \x01(\x04R\vuint64Value\x12#\n" +
	"\rfixed32_value\x18\t \x01(\aR\ffixed32Value\x12#\n" +
	"\rfixed64_value\x18\n" +
	" \x01(\x06R\ffixed64Value\x12%\n" +
	"\x0esfixed32_value\x18\v \x01(\x0fR\rsfixed32Value\x12%\n" +
	"\x0esfixed64_value\x18\f \x01(\x10R\rsfixed64Value\x12\x1d\n" +
	"\n" +
	"bool_value\x18\r \x01(\bR\tboolValue\x12!\n" +
	"\fstring_value\x18\x0e \x01(\tR\vstringValue\x12\x1f\n" +
	"\vbytes_value\x18\x0f \x01(\fR\n" +
	"bytesValue\x12@\n" +
	"\n" +
	"enum_value\x18\x10 \x01(\x0e2!.wayplatform.testdata.v1.TestEnumR\tenumValue\x12'\n" +
	"\x0frepeated_string\x18\x11 \x03(\tR\x0erepeatedString\x12%\n" +
	"\x0erepeated_int32\x18\x12 \x03(\x05R\rrepeatedInt32\x12O\n" +
	"\x0frepeated_nested\x18\x13 \x03(\v2&.wayplatform.testdata.v1.NestedMessageR\x0erepeatedNested\x12M\n" +
	"\x0enested_message\x18\x14 \x01(\v2&.wayplatform.testdata.v1.NestedMessageR\rnestedMessage\x12e\n" +
	"\x11map_string_string\x18\x15 \x03(\v29.wayplatform.testdata.v1.KitchenSink.MapStringStringEntryR\x0fmapStringString\x12b\n" +
	"\x10map_string_int32\x18\x16 \x03(\v28.wayplatform.testdata.v1.KitchenSink.MapStringInt32EntryR\x0emapStringInt32\x12b\n" +
	"\x10map_int32_string\x18\x17 \x03(\v28.wayplatform.testdata.v1.KitchenSink.MapInt32StringEntryR\x0emapInt32String\x12e\n" +
	"\x11map_string_nested\x18\x18 \x03(\v29.wayplatform.testdata.v1.KitchenSink.MapStringNestedEntryR\x0fmapStringNested\x12C\n" +
	"\x0ftimestamp_value\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampR\x0etimestampValue\x12@\n" +
	"\x0eduration_value\x18\x1a \x01(\v2\x19.google.protobuf.DurationR\rdurationValue\x120\n" +
	"\n" +
	"date_value\x188 \x01(\v2\x11.google.type.DateR\tdateValue\x12<\n" +
	"\x0edatetime_value\x189 \x01(\v2\x15.google.type.DateTimeR\rdatetimeValue\x12?\n" +
	"\x0ftimeofday_value\x18: \x01(\v2\x16.google.type.TimeOfDayR\x0etimeofdayValue\x12N\n" +
	"\x14string_wrapper_value\x18\x1b \x01(\v2\x1c.google.protobuf.StringValueR\x12stringWrapperValue\x12K\n" +
	"\x13int32_wrapper_value\x18\x1c \x01(\v2\x1b.google.protobuf.Int32ValueR\x11int32WrapperValue\x12K\n" +
	"\x13int64_wrapper_value\x18\x1d \x01(\v2\x1b.google.protobuf.Int64ValueR\x11int64WrapperValue\x12N\n" +
	"\x14uint32_wrapper_value\x18\x1e \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12uint32WrapperValue\x12N\n" +
	"\x14uint64_wrapper_value\x18\x1f \x01(\v2\x1c.google.protobuf.UInt64ValueR\x12uint64WrapperValue\x12H\n" +
	"\x12bool_wrapper_value\x18  \x01(\v2\x1a.google.protobuf.BoolValueR\x10boolWrapperValue\x12K\n" +
	"\x13float_wrapper_value\x18! \x01(\v2\x1b.google.protobuf.FloatValueR\x11floatWrapperValue\x12N\n" +
	"\x14double_wrapper_value\x18\" \x01(\v2\x1c.google.protobuf.DoubleValueR\x12doubleWrapperValue\x12K\n" +
	"\x13bytes_wrapper_value\x18# \x01(\v2\x1b.google.protobuf.BytesValueR\x11bytesWrapperValue\x12T\n" +
	"\x17repeated_string_wrapper\x18$ \x03(\v2\x1c.google.protobuf.StringValueR\x15repeatedStringWrapper\x12Q\n" +
	"\x16repeated_int32_wrapper\x18% \x03(\v2\x1b.google.protobuf.Int32ValueR\x14repeatedInt32Wrapper\x12I\n" +
	"\x12repeated_timestamp\x18& \x03(\v2\x1a.google.protobuf.TimestampR\x11repeatedTimestamp\x12x\n" +
	"\x18map_string_int32_wrapper\x18' \x03(\v2?.wayplatform.testdata.v1.KitchenSink.MapStringInt32WrapperEntryR\x15mapStringInt32Wrapper\x12{\n" +
	"\x19map_string_string_wrapper\x18( \x03(\v2@.wayplatform.testdata.v1.KitchenSink.MapStringStringWrapperEntryR\x16mapStringStringWrapper\x12n\n" +
	"\x14map_string_timestamp\x18) \x03(\v2<.wayplatform.testdata.v1.KitchenSink.MapStringTimestampEntryR\x12mapStringTimestamp\x126\n" +
	"\flatlng_value\x18* \x01(\v2\x13.google.type.LatLngR\vlatlngValue\x12)\n" +
	"\x10geography_string\x18+ \x01(\tR\x0fgeographyString\x12'\n" +
	"\x0fduration_string\x18, \x01(\tR\x0edurationString\x12'\n" +
	"\x0finterval_string\x18- \x01(\tR\x0eintervalString\x12A\n" +
	"\n" +
	"date_range\x18. \x01(\v2\".wayplatform.testdata.v1.DateRangeR\tdateRange\x12P\n" +
	"\x0ftimestamp_range\x18/ \x01(\v2'.wayplatform.testdata.v1.TimestampRangeR\x0etimestampRange\x12M\n" +
	"\x0edatetime_range\x180 \x01(\v2&.wayplatform.testdata.v1.DateTimeRangeR\rdatetimeRange\x12F\n" +
	"\x11repeated_duration\x181 \x03(\v2\x19.google.protobuf.DurationR\x10repeatedDuration\x12<\n" +
	"\x0frepeated_latlng\x182 \x03(\v2\x13.google.type.LatLngR\x0erepeatedLatlng\x12R\n" +
	"\x13repeated_date_range\x183 \x03(\v2\".wayplatform.testdata.v1.DateRangeR\x11repeatedDateRange\x12a\n" +
	"\x18repeated_timestamp_range\x184 \x03(\v2'.wayplatform.testdata.v1.TimestampRangeR\x16repeatedTimestampRange\x126\n" +
	"\rrepeated_date\x18; \x03(\v2\x11.google.type.DateR\frepeatedDate\x12B\n" +
	"\x11repeated_datetime\x18< \x03(\v2\x15.google.type.DateTimeR\x10repeatedDatetime\x12E\n" +
	"\x12repeated_timeofday\x18= \x03(\v2\x16.google.type.TimeOfDayR\x11repeatedTimeofday\x12k\n" +
	"\x13map_string_duration\x185 \x03(\v2;.wayplatform.testdata.v1.KitchenSink.MapStringDurationEntryR\x11mapStringDuration\x12e\n" +
	"\x11map_string_latlng\x186 \x03(\v29.wayplatform.testdata.v1.KitchenSink.MapStringLatlngEntryR\x0fmapStringLatlng\x12o\n" +
	"\x15map_string_date_range\x187 \x03(\v2<.wayplatform.testdata.v1.KitchenSink.MapStringDateRangeEntryR\x12mapStringDateRange\x12_\n" +
	"\x0fmap_string_date\x18> \x03(\v27.wayplatform.testdata.v1.KitchenSink.MapStringDateEntryR\rmapStringDate\x12k\n" +
	"\x13map_string_datetime\x18? \x03(\v2;.wayplatform.testdata.v1.KitchenSink.MapStringDatetimeEntryR\x11mapStringDatetime\x12n\n" +
	"\x14map_string_timeofday\x18@ \x03(\v2<.wayplatform.testdata.v1.KitchenSink.MapStringTimeofdayEntryR\x12mapStringTimeofday\x1aB\n" +
	"\x14MapStringStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13MapStringInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aA\n" +
	"\x13MapInt32StringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aj\n" +
	"\x14MapStringNestedEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.wayplatform.testdata.v1.NestedMessageR\x05value:\x028\x01\x1ae\n" +
	"\x1aMapStringInt32WrapperEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueR\x05value:\x028\x01\x1ag\n" +
	"\x1bMapStringStringWrapperEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x05value:\x028\x01\x1aa\n" +
	"\x17MapStringTimestampEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05value:\x028\x01\x1a_\n" +
	"\x16MapStringDurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x05value:\x028\x01\x1aW\n" +
	"\x14MapStringLatlngEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.google.type.LatLngR\x05value:\x028\x01\x1ai\n" +
	"\x17MapStringDateRangeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".wayplatform.testdata.v1.DateRangeR\x05value:\x028\x01\x1aS\n" +
	"\x12MapStringDateEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.google.type.DateR\x05value:\x028\x01\x1a[\n" +
	"\x16MapStringDatetimeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.google.type.DateTimeR\x05value:\x028\x01\x1a]\n" +
	"\x17MapStringTimeofdayEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.type.TimeOfDayR\x05value:\x028\x01\"3\n" +
	"\tDateRange\x12\x14\n" +
	"\x05start\x18\x01 \x01(\tR\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\tR\x03end\"p\n" +
	"\x0eTimestampRange\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\"7\n" +
	"\rDateTimeRange\x12\x14\n" +
	"\x05start\x18\x01 \x01(\tR\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\tR\x03end\"c\n" +
	"\rNestedMessage\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\x12\x12\n" +
	"\x04flag\x18\x03 \x01(\bR\x04flag\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags*W\n" +
	"\bTestEnum\x12\x19\n" +
	"\x15TEST_ENUM_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TEST_ENUM_VALUE_ONE\x10\x01\x12\x17\n" +
	"\x13TEST_ENUM_VALUE_TWO\x10\x02B\x81\x02\n" +
	"\x1bcom.wayplatform.testdata.v1B\x10KitchenSinkProtoP\x01ZRgithub.com/way-platform/protobg-go/internal/gen/wayplatform/testdata/v1;testdatav1\xa2\x02\x03WTX\xaa\x02\x17Wayplatform.Testdata.V1\xca\x02\x17Wayplatform\\Testdata\\V1\xe2\x02#Wayplatform\\Testdata\\V1\\GPBMetadata\xea\x02\x19Wayplatform::Testdata::V1b\beditionsp\xe8\a"

var file_wayplatform_testdata_v1_kitchen_sink_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_wayplatform_testdata_v1_kitchen_sink_proto_goTypes = []any{
	(TestEnum)(0),                  // 0: wayplatform.testdata.v1.TestEnum
	(*KitchenSink)(nil),            // 1: wayplatform.testdata.v1.KitchenSink
	(*DateRange)(nil),              // 2: wayplatform.testdata.v1.DateRange
	(*TimestampRange)(nil),         // 3: wayplatform.testdata.v1.TimestampRange
	(*DateTimeRange)(nil),          // 4: wayplatform.testdata.v1.DateTimeRange
	(*NestedMessage)(nil),          // 5: wayplatform.testdata.v1.NestedMessage
	nil,                            // 6: wayplatform.testdata.v1.KitchenSink.MapStringStringEntry
	nil,                            // 7: wayplatform.testdata.v1.KitchenSink.MapStringInt32Entry
	nil,                            // 8: wayplatform.testdata.v1.KitchenSink.MapInt32StringEntry
	nil,                            // 9: wayplatform.testdata.v1.KitchenSink.MapStringNestedEntry
	nil,                            // 10: wayplatform.testdata.v1.KitchenSink.MapStringInt32WrapperEntry
	nil,                            // 11: wayplatform.testdata.v1.KitchenSink.MapStringStringWrapperEntry
	nil,                            // 12: wayplatform.testdata.v1.KitchenSink.MapStringTimestampEntry
	nil,                            // 13: wayplatform.testdata.v1.KitchenSink.MapStringDurationEntry
	nil,                            // 14: wayplatform.testdata.v1.KitchenSink.MapStringLatlngEntry
	nil,                            // 15: wayplatform.testdata.v1.KitchenSink.MapStringDateRangeEntry
	nil,                            // 16: wayplatform.testdata.v1.KitchenSink.MapStringDateEntry
	nil,                            // 17: wayplatform.testdata.v1.KitchenSink.MapStringDatetimeEntry
	nil,                            // 18: wayplatform.testdata.v1.KitchenSink.MapStringTimeofdayEntry
	(*timestamppb.Timestamp)(nil),  // 19: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 20: google.protobuf.Duration
	(*date.Date)(nil),              // 21: google.type.Date
	(*datetime.DateTime)(nil),      // 22: google.type.DateTime
	(*timeofday.TimeOfDay)(nil),    // 23: google.type.TimeOfDay
	(*wrapperspb.StringValue)(nil), // 24: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),  // 25: google.protobuf.Int32Value
	(*wrapperspb.Int64Value)(nil),  // 26: google.protobuf.Int64Value
	(*wrapperspb.UInt32Value)(nil), // 27: google.protobuf.UInt32Value
	(*wrapperspb.UInt64Value)(nil), // 28: google.protobuf.UInt64Value
	(*wrapperspb.BoolValue)(nil),   // 29: google.protobuf.BoolValue
	(*wrapperspb.FloatValue)(nil),  // 30: google.protobuf.FloatValue
	(*wrapperspb.DoubleValue)(nil), // 31: google.protobuf.DoubleValue
	(*wrapperspb.BytesValue)(nil),  // 32: google.protobuf.BytesValue
	(*latlng.LatLng)(nil),          // 33: google.type.LatLng
}
var file_wayplatform_testdata_v1_kitchen_sink_proto_depIdxs = []int32{
	0,  // 0: wayplatform.testdata.v1.KitchenSink.enum_value:type_name -> wayplatform.testdata.v1.TestEnum
	5,  // 1: wayplatform.testdata.v1.KitchenSink.repeated_nested:type_name -> wayplatform.testdata.v1.NestedMessage
	5,  // 2: wayplatform.testdata.v1.KitchenSink.nested_message:type_name -> wayplatform.testdata.v1.NestedMessage
	6,  // 3: wayplatform.testdata.v1.KitchenSink.map_string_string:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringStringEntry
	7,  // 4: wayplatform.testdata.v1.KitchenSink.map_string_int32:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringInt32Entry
	8,  // 5: wayplatform.testdata.v1.KitchenSink.map_int32_string:type_name -> wayplatform.testdata.v1.KitchenSink.MapInt32StringEntry
	9,  // 6: wayplatform.testdata.v1.KitchenSink.map_string_nested:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringNestedEntry
	19, // 7: wayplatform.testdata.v1.KitchenSink.timestamp_value:type_name -> google.protobuf.Timestamp
	20, // 8: wayplatform.testdata.v1.KitchenSink.duration_value:type_name -> google.protobuf.Duration
	21, // 9: wayplatform.testdata.v1.KitchenSink.date_value:type_name -> google.type.Date
	22, // 10: wayplatform.testdata.v1.KitchenSink.datetime_value:type_name -> google.type.DateTime
	23, // 11: wayplatform.testdata.v1.KitchenSink.timeofday_value:type_name -> google.type.TimeOfDay
	24, // 12: wayplatform.testdata.v1.KitchenSink.string_wrapper_value:type_name -> google.protobuf.StringValue
	25, // 13: wayplatform.testdata.v1.KitchenSink.int32_wrapper_value:type_name -> google.protobuf.Int32Value
	26, // 14: wayplatform.testdata.v1.KitchenSink.int64_wrapper_value:type_name -> google.protobuf.Int64Value
	27, // 15: wayplatform.testdata.v1.KitchenSink.uint32_wrapper_value:type_name -> google.protobuf.UInt32Value
	28, // 16: wayplatform.testdata.v1.KitchenSink.uint64_wrapper_value:type_name -> google.protobuf.UInt64Value
	29, // 17: wayplatform.testdata.v1.KitchenSink.bool_wrapper_value:type_name -> google.protobuf.BoolValue
	30, // 18: wayplatform.testdata.v1.KitchenSink.float_wrapper_value:type_name -> google.protobuf.FloatValue
	31, // 19: wayplatform.testdata.v1.KitchenSink.double_wrapper_value:type_name -> google.protobuf.DoubleValue
	32, // 20: wayplatform.testdata.v1.KitchenSink.bytes_wrapper_value:type_name -> google.protobuf.BytesValue
	24, // 21: wayplatform.testdata.v1.KitchenSink.repeated_string_wrapper:type_name -> google.protobuf.StringValue
	25, // 22: wayplatform.testdata.v1.KitchenSink.repeated_int32_wrapper:type_name -> google.protobuf.Int32Value
	19, // 23: wayplatform.testdata.v1.KitchenSink.repeated_timestamp:type_name -> google.protobuf.Timestamp
	10, // 24: wayplatform.testdata.v1.KitchenSink.map_string_int32_wrapper:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringInt32WrapperEntry
	11, // 25: wayplatform.testdata.v1.KitchenSink.map_string_string_wrapper:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringStringWrapperEntry
	12, // 26: wayplatform.testdata.v1.KitchenSink.map_string_timestamp:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringTimestampEntry
	33, // 27: wayplatform.testdata.v1.KitchenSink.latlng_value:type_name -> google.type.LatLng
	2,  // 28: wayplatform.testdata.v1.KitchenSink.date_range:type_name -> wayplatform.testdata.v1.DateRange
	3,  // 29: wayplatform.testdata.v1.KitchenSink.timestamp_range:type_name -> wayplatform.testdata.v1.TimestampRange
	4,  // 30: wayplatform.testdata.v1.KitchenSink.datetime_range:type_name -> wayplatform.testdata.v1.DateTimeRange
	20, // 31: wayplatform.testdata.v1.KitchenSink.repeated_duration:type_name -> google.protobuf.Duration
	33, // 32: wayplatform.testdata.v1.KitchenSink.repeated_latlng:type_name -> google.type.LatLng
	2,  // 33: wayplatform.testdata.v1.KitchenSink.repeated_date_range:type_name -> wayplatform.testdata.v1.DateRange
	3,  // 34: wayplatform.testdata.v1.KitchenSink.repeated_timestamp_range:type_name -> wayplatform.testdata.v1.TimestampRange
	21, // 35: wayplatform.testdata.v1.KitchenSink.repeated_date:type_name -> google.type.Date
	22, // 36: wayplatform.testdata.v1.KitchenSink.repeated_datetime:type_name -> google.type.DateTime
	23, // 37: wayplatform.testdata.v1.KitchenSink.repeated_timeofday:type_name -> google.type.TimeOfDay
	13, // 38: wayplatform.testdata.v1.KitchenSink.map_string_duration:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringDurationEntry
	14, // 39: wayplatform.testdata.v1.KitchenSink.map_string_latlng:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringLatlngEntry
	15, // 40: wayplatform.testdata.v1.KitchenSink.map_string_date_range:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringDateRangeEntry
	16, // 41: wayplatform.testdata.v1.KitchenSink.map_string_date:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringDateEntry
	17, // 42: wayplatform.testdata.v1.KitchenSink.map_string_datetime:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringDatetimeEntry
	18, // 43: wayplatform.testdata.v1.KitchenSink.map_string_timeofday:type_name -> wayplatform.testdata.v1.KitchenSink.MapStringTimeofdayEntry
	19, // 44: wayplatform.testdata.v1.TimestampRange.start:type_name -> google.protobuf.Timestamp
	19, // 45: wayplatform.testdata.v1.TimestampRange.end:type_name -> google.protobuf.Timestamp
	5,  // 46: wayplatform.testdata.v1.KitchenSink.MapStringNestedEntry.value:type_name -> wayplatform.testdata.v1.NestedMessage
	25, // 47: wayplatform.testdata.v1.KitchenSink.MapStringInt32WrapperEntry.value:type_name -> google.protobuf.Int32Value
	24, // 48: wayplatform.testdata.v1.KitchenSink.MapStringStringWrapperEntry.value:type_name -> google.protobuf.StringValue
	19, // 49: wayplatform.testdata.v1.KitchenSink.MapStringTimestampEntry.value:type_name -> google.protobuf.Timestamp
	20, // 50: wayplatform.testdata.v1.KitchenSink.MapStringDurationEntry.value:type_name -> google.protobuf.Duration
	33, // 51: wayplatform.testdata.v1.KitchenSink.MapStringLatlngEntry.value:type_name -> google.type.LatLng
	2,  // 52: wayplatform.testdata.v1.KitchenSink.MapStringDateRangeEntry.value:type_name -> wayplatform.testdata.v1.DateRange
	21, // 53: wayplatform.testdata.v1.KitchenSink.MapStringDateEntry.value:type_name -> google.type.Date
	22, // 54: wayplatform.testdata.v1.KitchenSink.MapStringDatetimeEntry.value:type_name -> google.type.DateTime
	23, // 55: wayplatform.testdata.v1.KitchenSink.MapStringTimeofdayEntry.value:type_name -> google.type.TimeOfDay
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_wayplatform_testdata_v1_kitchen_sink_proto_init() }
func file_wayplatform_testdata_v1_kitchen_sink_proto_init() {
	if File_wayplatform_testdata_v1_kitchen_sink_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_testdata_v1_kitchen_sink_proto_rawDesc), len(file_wayplatform_testdata_v1_kitchen_sink_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_testdata_v1_kitchen_sink_proto_goTypes,
		DependencyIndexes: file_wayplatform_testdata_v1_kitchen_sink_proto_depIdxs,
		EnumInfos:         file_wayplatform_testdata_v1_kitchen_sink_proto_enumTypes,
		MessageInfos:      file_wayplatform_testdata_v1_kitchen_sink_proto_msgTypes,
	}.Build()
	File_wayplatform_testdata_v1_kitchen_sink_proto = out.File
	file_wayplatform_testdata_v1_kitchen_sink_proto_goTypes = nil
	file_wayplatform_testdata_v1_kitchen_sink_proto_depIdxs = nil
}
